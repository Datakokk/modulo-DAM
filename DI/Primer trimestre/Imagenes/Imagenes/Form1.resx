<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        3z2sAdUdiyOw4yyk9ftisrKyjNU+D//Z
</value>
  </data>
</root>